version: "3"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zookeeper
    container_name: "zookeeper"
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    restart: unless-stopped
    networks:
      - kafka_lan

  broker:
    image: confluentinc/cp-kafka:7.2.0
    hostname: broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped
    networks:
      - kafka_lan

#  ksqldb-server:
#    image: confluentinc/ksqldb-server:0.26.0
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    depends_on:
#      - broker
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_LISTENERS: http://0.0.0.0:8088
#      KSQL_BOOTSTRAP_SERVERS: broker:9092
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
#    restart: unless-stopped
#    networks:
#      - kafka_lan
#
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.26.0
#    container_name: ksqldb-cli
#    depends_on:
#      - broker
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#    restart: unless-stopped
#    networks:
#      - kafka_lan

networks:

  kafka_lan:
    driver: bridge

#---
#version: '2'
#
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.2.0
#    hostname: zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  broker:
#    image: confluentinc/cp-kafka:7.2.0
#    hostname: broker
#    container_name: broker
#    depends_on:
#      - zookeeper
#    ports:
#      - "29092:29092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#
#  ksqldb-server:
#    image: confluentinc/ksqldb-server:0.26.0
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    depends_on:
#      - broker
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_LISTENERS: http://0.0.0.0:8088
#      KSQL_BOOTSTRAP_SERVERS: broker:9092
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
#
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.26.0
#    container_name: ksqldb-cli
#    depends_on:
#      - broker
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true